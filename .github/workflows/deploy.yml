name: Deploy to BunnyCDN

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                browser: [chromium, firefox, webkit]
        
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Set up Bun
                uses: oven-sh/setup-bun@v2

            -   name: Install dependencies
                run: bun install

            -   name: Cache Playwright browsers
                uses: actions/cache@v3
                with:
                    path: ~/.cache/ms-playwright
                    key: playwright-browsers-${{ runner.os }}-${{ hashFiles('package.json') }}
                    restore-keys: |
                        playwright-browsers-${{ runner.os }}-

            -   name: Install Playwright browsers
                run: bunx playwright install --with-deps ${{ matrix.browser }}

            -   name: Run Playwright tests for ${{ matrix.browser }}
                run: bunx playwright test --project=${{ matrix.browser }}

    build-and-deploy:
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Set up Bun
                uses: oven-sh/setup-bun@v2

            -   name: Install dependencies
                run: bun install

            -   name: Build project
                run: bun -b run build

            -   name: Deploy to BunnyCDN
                uses: ayeressian/bunnycdn-storage-deploy@v2.2.5
                with:
                    source: "dist"
                    destination: "/"
                    storageZoneName: "${{ secrets.STORAGE_NAME }}"
                    storagePassword: "${{ secrets.STORAGE_PASSWORD }}"
                    accessKey: "${{ secrets.STORAGE_KEY }}"
                    pullZoneId: "${{ secrets.ZONE_ID }}"
                    upload: "true"
                    remove: "true"
                    purgePullZone: "true"
